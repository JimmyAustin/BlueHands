{"sexprs": "(declare-fun FirstTimestamp () (_ BitVec 256))\n(declare-fun LastReturnType () Int)\n(declare-fun AttackerWallet () (_ BitVec 256))\n(declare-fun CallValue_0 () (_ BitVec 256))\n(declare-fun AttackerWalletStarting () (_ BitVec 256))\n(declare-fun Timestamp_0 () (_ BitVec 256))\n(declare-fun LastTimestamp () (_ BitVec 256))\n(declare-fun |61747461636b6572000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(declare-fun |636f6e7472616374000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(declare-fun k!0 () Bool)\n(declare-fun CallDataSize_0 () Int)\n(declare-fun k!1 () (_ BitVec 32))\n(declare-fun input_0_0 () (_ BitVec 256))\n(assert (bvsge CallValue_0\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge AttackerWalletStarting CallValue_0))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (< CallDataSize_0 4) 1 0) 0))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x0000000000000000000000000000000000000000000000000000000027e235e3)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000003ccfd60b)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x0000000000000000000000000000000000000000000000000000000079af55e4)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x00000000000000000000000000000000000000000000000000000000a4beda63)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= (bvudiv input_0_0\n                          #x0000000100000000000000000000000000000000000000000000000000000000)\n                  #x00000000000000000000000000000000000000000000000000000000d0e30db0)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= FirstTimestamp\n   #x000000000000000000000000000000000000000000000000000000005a48df51))\n(assert (bvsgt (bvadd FirstTimestamp\n              #x0000000000000000000000000000000000000000000000000000000000093a80)\n       LastTimestamp))\n(assert (bvsgt AttackerWallet AttackerWalletStarting))\n(assert (= LastReturnType 2))\n(assert (= AttackerWallet (bvsub AttackerWalletStarting CallValue_0)))\n(assert (= FirstTimestamp Timestamp_0))\n(assert (= LastTimestamp Timestamp_0))\n(assert (= |61747461636b6572000000000000000000000000_Wallet|\n   (bvsub AttackerWalletStarting CallValue_0)))\n(assert (= |636f6e7472616374000000000000000000000000_Wallet|\n   (bvadd CallValue_0\n          #x0000000000000000000000000000000000000000000000004563918244f40000)))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge (bvadd CallValue_0\n              #x0000000000000000000000000000000000000000000000004563918244f40000)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(model-add FirstTimestamp\n           ()\n           (_ BitVec 256)\n           #x000000000000000000000000000000000000000000000000000000005a48df51)\n(model-add LastReturnType () Int 2)\n(model-add AttackerWallet\n           ()\n           (_ BitVec 256)\n           (bvadd AttackerWalletStarting\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_0)))\n(model-add Timestamp_0\n           ()\n           (_ BitVec 256)\n           #x000000000000000000000000000000000000000000000000000000005a48df51)\n(model-add LastTimestamp\n           ()\n           (_ BitVec 256)\n           #x000000000000000000000000000000000000000000000000000000005a48df51)\n(model-add |61747461636b6572000000000000000000000000_Wallet|\n           ()\n           (_ BitVec 256)\n           (bvadd AttackerWalletStarting\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_0)))\n(model-add |636f6e7472616374000000000000000000000000_Wallet|\n           ()\n           (_ BitVec 256)\n           (bvadd #x0000000000000000000000000000000000000000000000004563918244f40000\n                  CallValue_0))\n(model-del k!0)\n(model-add CallDataSize_0 () Int (ite k!0 4 (+ 4 (- 1))))\n(model-del k!1)\n(model-add input_0_0\n           ()\n           (_ BitVec 256)\n           (concat k!1\n                   #x00000000000000000000000000000000000000000000000000000000))\n", "stats": {"eliminated vars": 35, "eliminated applications": 2, "mk bool var": 5117, "mk binary clause": 39705, "mk ternary clause": 12042, "mk clause": 13553, "del clause": 12578, "conflicts": 4997, "propagations": 569762, "decisions": 91623, "binary propagations": 695568, "ternary propagations": 979968, "restarts": 713, "minimized lits": 37555, "dyn subsumption resolution": 53557, "units": 1570, "elim bool vars res": 2560, "elim clauses": 18, "elim literals": 32, "subsumed": 2268, "subsumption resolution": 32, "elim bool vars scc": 1, "num allocs": 27686015, "rlimit count": 2539693, "max memory": 8.26, "memory": 1.5}}