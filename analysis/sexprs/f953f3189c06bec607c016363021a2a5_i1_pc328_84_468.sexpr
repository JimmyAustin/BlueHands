{"sexprs": "(declare-fun LastReturnType () (_ BitVec 256))\n(declare-fun AttackerWallet () (_ BitVec 256))\n(declare-fun CallValue_1 () (_ BitVec 256))\n(declare-fun CallValue_0 () (_ BitVec 256))\n(declare-fun AttackerWalletStarting () (_ BitVec 256))\n(declare-fun FirstTimestamp () (_ BitVec 256))\n(declare-fun Timestamp_0 () (_ BitVec 256))\n(declare-fun LastTimestamp () (_ BitVec 256))\n(declare-fun Timestamp_1 () (_ BitVec 256))\n(declare-fun |61747461636b6572000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(declare-fun |636f6e7472616374000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(declare-fun k!55723 () Bool)\n(declare-fun CallDataSize_0 () (_ BitVec 256))\n(declare-fun k!55724 () (_ BitVec 32))\n(declare-fun input_0_0 () (_ BitVec 256))\n(declare-fun k!55725 () Bool)\n(declare-fun k!55726 () (_ BitVec 32))\n(declare-fun input_1_32 () (_ BitVec 256))\n(declare-fun k!55727 () Bool)\n(declare-fun k!55728 () Bool)\n(declare-fun input@1_4 () (_ BitVec 256))\n(declare-fun k!55729 () Bool)\n(declare-fun k!55730 () (_ BitVec 224))\n(declare-fun k!55731 () Bool)\n(declare-fun k!55732 () Bool)\n(declare-fun input_1_0 () (_ BitVec 256))\n(declare-fun k!55733 () (_ BitVec 32))\n(declare-fun CallDataSize_1 () (_ BitVec 256))\n(assert (bvsge CallValue_0\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge AttackerWalletStarting CallValue_0))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (bvslt CallDataSize_0\n               #x0000000000000000000000000000000000000000000000000000000000000004)\n        1\n        0)\n   0))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000002e1a7d4d)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000003fb2a74e)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000004e0a3379)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= (bvudiv input_0_0\n                          #x0000000100000000000000000000000000000000000000000000000000000000)\n                  #x00000000000000000000000000000000000000000000000000000000d0e30db0)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsgt Timestamp_1 Timestamp_0))\n(assert (bvsge CallValue_1\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0) CallValue_1))\n(assert (bvsge (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (bvslt CallDataSize_1\n               #x0000000000000000000000000000000000000000000000000000000000000004)\n        1\n        0)\n   0))\n(assert (= (ite (= (bvudiv input_1_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000002e1a7d4d)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_1_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000003fb2a74e)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= (bvudiv input_1_0\n                          #x0000000100000000000000000000000000000000000000000000000000000000)\n                  #x000000000000000000000000000000000000000000000000000000004e0a3379)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= CallValue_1\n                  #x0000000000000000000000000000000000000000000000000000000000000000)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (let ((a!1 (= (ite (bvslt (bvsub CallDataSize_1\n                                 #x0000000000000000000000000000000000000000000000000000000000000004)\n                          #x0000000000000000000000000000000000000000000000000000000000000020)\n                   1\n                   0)\n              0)))\n  (distinct (ite a!1\n                 #x0000000000000000000000000000000000000000000000000000000000000001\n                 #x0000000000000000000000000000000000000000000000000000000000000000)\n            #x0000000000000000000000000000000000000000000000000000000000000000)))\n(assert (= ((_ extract 223 0) input_1_0) ((_ extract 255 32) input@1_4)))\n(assert (= ((_ extract 31 0) input@1_4) ((_ extract 255 224) input_1_32)))\n(assert (bvsgt AttackerWallet AttackerWalletStarting))\n(assert (= LastReturnType\n   #x0000000000000000000000000000000000000000000000000000000000000002))\n(assert (= AttackerWallet\n   (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)))\n(assert (= FirstTimestamp Timestamp_0))\n(assert (= LastTimestamp Timestamp_1))\n(assert (= |61747461636b6572000000000000000000000000_Wallet|\n   (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)))\n(assert (let ((a!1 (bvsub (bvadd (bvsub (bvadd CallValue_0\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       CallValue_0\n                                       #x0000000000000000000000000000000000000000000000004563918244f40000\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       #x0000000000000000000000000000000000000000000000000000000000000000)\n                                #x0000000000000000000000000000000000000000000000004563918244f40000)\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000004563918244f40000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000002faf080\n                         CallValue_0\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000004563918244f40000\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000000000000000000000)\n                  #x0000000000000000000000000000000000000000000000004563918244f40000)))\n  (= |636f6e7472616374000000000000000000000000_Wallet|\n     (bvadd a!1\n            CallValue_0\n            #x0000000000000000000000000000000000000000000000000000000000000000\n            #x0000000000000000000000000000000000000000000000004563918244f40000\n            #x0000000000000000000000000000000000000000000000000000000000000000\n            CallValue_0\n            #x0000000000000000000000000000000000000000000000000000000000000000\n            #x0000000000000000000000000000000000000000000000004563918244f40000\n            CallValue_1))))\n(assert (bvsge (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (let ((a!1 (bvsub (bvadd (bvsub (bvadd CallValue_0\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       CallValue_0\n                                       #x0000000000000000000000000000000000000000000000004563918244f40000\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       #x0000000000000000000000000000000000000000000000000000000000000000)\n                                #x0000000000000000000000000000000000000000000000004563918244f40000)\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000004563918244f40000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000002faf080\n                         CallValue_0\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000004563918244f40000\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000000000000000000000)\n                  #x0000000000000000000000000000000000000000000000004563918244f40000)))\n  (bvsge (bvadd a!1\n                CallValue_0\n                #x0000000000000000000000000000000000000000000000000000000000000000\n                #x0000000000000000000000000000000000000000000000004563918244f40000\n                #x0000000000000000000000000000000000000000000000000000000000000000\n                CallValue_0\n                #x0000000000000000000000000000000000000000000000000000000000000000\n                #x0000000000000000000000000000000000000000000000004563918244f40000\n                CallValue_1)\n         #x0000000000000000000000000000000000000000000000000000000000000000)))\n(model-add LastReturnType\n           ()\n           (_ BitVec 256)\n           #x0000000000000000000000000000000000000000000000000000000000000002)\n(model-add AttackerWallet\n           ()\n           (_ BitVec 256)\n           (bvadd AttackerWalletStarting\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_0)\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_1)))\n(model-add FirstTimestamp () (_ BitVec 256) Timestamp_0)\n(model-add LastTimestamp () (_ BitVec 256) Timestamp_1)\n(model-add |61747461636b6572000000000000000000000000_Wallet|\n           ()\n           (_ BitVec 256)\n           (bvadd AttackerWalletStarting\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_0)\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_1)))\n(model-add |636f6e7472616374000000000000000000000000_Wallet|\n           ()\n           (_ BitVec 256)\n           (bvadd #x000000000000000000000000000000000000000000000000d02ab486d1d6f080\n                  (bvmul #x000000000000000000000000000000000000000000000000000000000000001e\n                         CallValue_0)\n                  CallValue_1))\n(model-del k!55723)\n(model-add CallDataSize_0\n           ()\n           (_ BitVec 256)\n           (ite (or k!55723\n                    (= #x0000000000000000000000000000000000000000000000000000000000000004\n                       #x8000000000000000000000000000000000000000000000000000000000000000))\n                #x0000000000000000000000000000000000000000000000000000000000000004\n                (bvsub #x0000000000000000000000000000000000000000000000000000000000000004\n                       #x0000000000000000000000000000000000000000000000000000000000000001)))\n(model-del k!55724)\n(model-add input_0_0\n           ()\n           (_ BitVec 256)\n           (concat k!55724\n                   #x00000000000000000000000000000000000000000000000000000000))\n(model-del k!55725)\n(model-add Timestamp_1\n           ()\n           (_ BitVec 256)\n           (ite (or k!55725\n                    (= Timestamp_0\n                       #x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))\n                Timestamp_0\n                (bvadd Timestamp_0\n                       #x0000000000000000000000000000000000000000000000000000000000000001)))\n(model-del k!55726)\n(model-add input_1_32\n           ()\n           (_ BitVec 256)\n           (concat k!55726\n                   #x00000000000000000000000000000000000000000000000000000000))\n(model-del k!55727)\n(model-add k!55725 () Bool (not k!55727))\n(model-del k!55728)\n(model-add k!55726\n           ()\n           (_ BitVec 32)\n           (ite k!55728\n                ((_ extract 31 0) input@1_4)\n                (bvnot ((_ extract 31 0) input@1_4))))\n(model-del k!55729)\n(model-add Timestamp_0\n           ()\n           (_ BitVec 256)\n           (ite k!55729\n                #x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                (bvnot #x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)))\n(model-del k!55730)\n(model-add input@1_4 () (_ BitVec 256) (concat k!55730 #x00000000))\n(model-del k!55731)\n(model-add k!55729 () Bool (not k!55731))\n(model-del k!55732)\n(model-add k!55730\n           ()\n           (_ BitVec 224)\n           (ite k!55732\n                ((_ extract 223 0) input_1_0)\n                (bvnot ((_ extract 223 0) input_1_0))))\n(model-del k!55733)\n(model-add input_1_0\n           ()\n           (_ BitVec 256)\n           (concat k!55733\n                   #x00000000000000000000000000000000000000000000000000000000))\n", "stats": {"eliminated vars": 328, "eliminated applications": 11, "mk bool var": 9918, "mk binary clause": 78861, "mk ternary clause": 24738, "mk clause": 21938, "del clause": 25396, "conflicts": 3879, "propagations": 443353, "decisions": 76907, "binary propagations": 484544, "ternary propagations": 701244, "restarts": 305, "minimized lits": 6765, "dyn subsumption resolution": 2579, "units": 9, "elim bool vars res": 5584, "elim clauses": 16, "elim literals": 72, "subsumed": 4598, "subsumption resolution": 72, "elim bool vars scc": 2, "rlimit count": 43380787, "max memory": 22.83, "memory": 3.76, "num allocs": 56559435677.0}}