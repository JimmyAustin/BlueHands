{"sexprs": "(declare-fun CallValue_0 () (_ BitVec 256))\n(declare-fun AttackerWalletStarting () (_ BitVec 256))\n(declare-fun CallDataSize_0 () (_ BitVec 256))\n(declare-fun input_0_0 () (_ BitVec 256))\n(declare-fun input@0_4 () (_ BitVec 256))\n(declare-fun input_0_32 () (_ BitVec 256))\n(declare-fun LastReturnType () (_ BitVec 256))\n(declare-fun LastReturnValue () (_ BitVec 256))\n(declare-fun AttackerWallet () (_ BitVec 256))\n(declare-fun Timestamp_0 () (_ BitVec 256))\n(declare-fun FirstTimestamp () (_ BitVec 256))\n(declare-fun LastTimestamp () (_ BitVec 256))\n(declare-fun |61747461636b6572000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(declare-fun |636f6e7472616374000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(assert (bvsge CallValue_0\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge AttackerWalletStarting CallValue_0))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= CallValue_0\n                  #x0000000000000000000000000000000000000000000000000000000000000000)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (bvslt CallDataSize_0\n               #x0000000000000000000000000000000000000000000000000000000000000004)\n        1\n        0)\n   0))\n(assert (distinct (ite (= (bvudiv input_0_0\n                          #x0000000100000000000000000000000000000000000000000000000000000000)\n                  #x00000000000000000000000000000000000000000000000000000000ad065eb5)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (let ((a!1 (= (ite (bvslt (bvsub CallDataSize_0\n                                 #x0000000000000000000000000000000000000000000000000000000000000004)\n                          #x0000000000000000000000000000000000000000000000000000000000000020)\n                   1\n                   0)\n              0)))\n  (distinct (ite a!1\n                 #x0000000000000000000000000000000000000000000000000000000000000001\n                 #x0000000000000000000000000000000000000000000000000000000000000000)\n            #x0000000000000000000000000000000000000000000000000000000000000000)))\n(assert (= ((_ extract 223 0) input_0_0) ((_ extract 255 32) input@0_4)))\n(assert (= ((_ extract 31 0) input@0_4) ((_ extract 255 224) input_0_32)))\n(assert (= LastReturnType\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= #x0000000000000000000000000000000000000000000000000000000000000001\n   LastReturnValue))\n(assert (= LastReturnType\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= AttackerWallet (bvsub AttackerWalletStarting CallValue_0)))\n(assert (= FirstTimestamp Timestamp_0))\n(assert (= LastTimestamp Timestamp_0))\n(assert (let ((a!1 (= (ite (= (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                             #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                             input@0_4)\n                      #x00000000000000000000000061747461636b6572000000000000000000000000)\n                   #x0000000000000000000000000000000000000000000000000000000000000001\n                   #x0000000000000000000000000000000000000000000000000000000000000000)\n              #x0000000000000000000000000000000000000000000000000000000000000000)))\n(let ((a!2 (= (ite (= (ite a!1\n                           #x0000000000000000000000000000000000000000000000000000000000000001\n                           #x0000000000000000000000000000000000000000000000000000000000000000)\n                      #x0000000000000000000000000000000000000000000000000000000000000000)\n                   #x0000000000000000000000000000000000000000000000000000000000000001\n                   #x0000000000000000000000000000000000000000000000000000000000000000)\n              #x0000000000000000000000000000000000000000000000000000000000000000)))\n  (= LastReturnValue\n     (ite (= (ite a!2\n                  #x0000000000000000000000000000000000000000000000000000000000000001\n                  #x0000000000000000000000000000000000000000000000000000000000000000)\n             #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000001\n          #x0000000000000000000000000000000000000000000000000000000000000000)))))\n(assert (= |61747461636b6572000000000000000000000000_Wallet|\n   (bvsub AttackerWalletStarting CallValue_0)))\n(assert (= |636f6e7472616374000000000000000000000000_Wallet|\n   (bvadd (bvsub (bvadd CallValue_0\n                        #x0000000000000000000000000000000000000000000000000000000000000000\n                        CallValue_0\n                        CallValue_0\n                        CallValue_0\n                        CallValue_0\n                        CallValue_0\n                        #x0000000000000000000000000000000000000000000000000000000000000000\n                        CallValue_0\n                        #x0000000000000000000000000000000000000000000000004563918244f40000\n                        #x0000000000000000000000000000000000000000000000000000000000000000\n                        #x0000000000000000000000000000000000000000000000000000000000000000)\n                 #x0000000000000000000000000000000000000000000000004563918244f40000)\n          CallValue_0\n          #x0000000000000000000000000000000000000000000000004563918244f40000\n          CallValue_0\n          #x0000000000000000000000000000000000000000000000000000000000000000\n          #x0000000000000000000000000000000000000000000000000000000000000000\n          CallValue_0\n          #x0000000000000000000000000000000000000000000000000000000000000000\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          #x0000000000000000000000000000000000000000000000000000000000000000\n          CallValue_0\n          #x0000000000000000000000000000000000000000000000000000000002faf080\n          CallValue_0)))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge (bvadd (bvsub (bvadd CallValue_0\n                            #x0000000000000000000000000000000000000000000000000000000000000000\n                            CallValue_0\n                            CallValue_0\n                            CallValue_0\n                            CallValue_0\n                            CallValue_0\n                            #x0000000000000000000000000000000000000000000000000000000000000000\n                            CallValue_0\n                            #x0000000000000000000000000000000000000000000000004563918244f40000\n                            #x0000000000000000000000000000000000000000000000000000000000000000\n                            #x0000000000000000000000000000000000000000000000000000000000000000)\n                     #x0000000000000000000000000000000000000000000000004563918244f40000)\n              CallValue_0\n              #x0000000000000000000000000000000000000000000000004563918244f40000\n              CallValue_0\n              #x0000000000000000000000000000000000000000000000000000000000000000\n              #x0000000000000000000000000000000000000000000000000000000000000000\n              CallValue_0\n              #x0000000000000000000000000000000000000000000000000000000000000000\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              #x0000000000000000000000000000000000000000000000000000000000000000\n              CallValue_0\n              #x0000000000000000000000000000000000000000000000000000000002faf080\n              CallValue_0)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(rmodel->model-converter-wrapper\n61747461636b6572000000000000000000000000_Wallet -> #x0000000000000000000000000000000000000000000000000000000000000000\nTimestamp_0 -> #x0000000000000000000000000000000000000000000000000000000000000000\ninput_0_32 -> #x0000000000000000000000000000000000000000000000000000000000000000\ninput_0_0 -> #xad065eb500000000000000000000000061747461636b65720000000000000000\nAttackerWallet -> #x0000000000000000000000000000000000000000000000000000000000000000\nFirstTimestamp -> #x0000000000000000000000000000000000000000000000000000000000000000\nLastReturnType -> #x0000000000000000000000000000000000000000000000000000000000000000\nLastTimestamp -> #x0000000000000000000000000000000000000000000000000000000000000000\nCallValue_0 -> #x0000000000000000000000000000000000000000000000000000000000000000\ninput@0_4 -> #x00000000000000000000000061747461636b6572000000000000000000000000\nLastReturnValue -> #x0000000000000000000000000000000000000000000000000000000000000001\nCallDataSize_0 -> #x4000000000000000000000000000000000000000000000000000000000000004\n636f6e7472616374000000000000000000000000_Wallet -> #x0000000000000000000000000000000000000000000000004563918247eef080\nAttackerWalletStarting -> #x0000000000000000000000000000000000000000000000000000000000000000\n)\n", "stats": {"mk bool var": 18576, "conflicts": 2, "decisions": 848, "propagations": 13078, "binary propagations": 6545, "final checks": 1, "added eqs": 67, "mk clause": 25130, "del clause": 18018, "minimized lits": 1, "num checks": 1, "bv diseqs": 1, "bv bit2core": 2495, "bv->core eq": 17, "bv dynamic eqs": 17, "rlimit count": 35783144, "max memory": 46.48, "memory": 6.9, "num allocs": 116204885433.0}}