{"sexprs": "(declare-fun LastReturnType () (_ BitVec 256))\n(declare-fun LastReturnValue () (_ BitVec 256))\n(declare-fun AttackerWallet () (_ BitVec 256))\n(declare-fun CallValue_1 () (_ BitVec 256))\n(declare-fun CallValue_0 () (_ BitVec 256))\n(declare-fun AttackerWalletStarting () (_ BitVec 256))\n(declare-fun FirstTimestamp () (_ BitVec 256))\n(declare-fun Timestamp_0 () (_ BitVec 256))\n(declare-fun LastTimestamp () (_ BitVec 256))\n(declare-fun Timestamp_1 () (_ BitVec 256))\n(declare-fun |61747461636b6572000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(declare-fun |636f6e7472616374000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(declare-fun k!44769 () (_ BitVec 32))\n(declare-fun input_0_64 () (_ BitVec 256))\n(declare-fun k!44770 () Bool)\n(declare-fun k!44771 () Bool)\n(declare-fun CallDataSize_1 () (_ BitVec 256))\n(declare-fun k!44772 () (_ BitVec 32))\n(declare-fun input_1_0 () (_ BitVec 256))\n(declare-fun k!44773 () Bool)\n(declare-fun input@0_36 () (_ BitVec 256))\n(declare-fun k!44774 () Bool)\n(declare-fun k!44775 () Bool)\n(declare-fun k!44776 () Bool)\n(declare-fun k!44777 () Bool)\n(declare-fun CallDataSize_0 () (_ BitVec 256))\n(declare-fun input_0_0 () (_ BitVec 256))\n(declare-fun input@0_4 () (_ BitVec 256))\n(declare-fun input_0_32 () (_ BitVec 256))\n(assert (bvsge CallValue_0\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge AttackerWalletStarting CallValue_0))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (bvslt CallDataSize_0\n               #x0000000000000000000000000000000000000000000000000000000000000004)\n        1\n        0)\n   0))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000006d4ce63c)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= (bvudiv input_0_0\n                          #x0000000100000000000000000000000000000000000000000000000000000000)\n                  #x00000000000000000000000000000000000000000000000000000000a5f3c23b)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= CallValue_0\n                  #x0000000000000000000000000000000000000000000000000000000000000000)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (let ((a!1 (= (ite (bvslt (bvsub CallDataSize_0\n                                 #x0000000000000000000000000000000000000000000000000000000000000004)\n                          #x0000000000000000000000000000000000000000000000000000000000000040)\n                   1\n                   0)\n              0)))\n  (distinct (ite a!1\n                 #x0000000000000000000000000000000000000000000000000000000000000001\n                 #x0000000000000000000000000000000000000000000000000000000000000000)\n            #x0000000000000000000000000000000000000000000000000000000000000000)))\n(assert (= ((_ extract 223 0) input_0_0) ((_ extract 255 32) input@0_4)))\n(assert (= ((_ extract 31 0) input@0_4) ((_ extract 255 224) input_0_32)))\n(assert (= ((_ extract 223 0) input_0_32) ((_ extract 255 32) input@0_36)))\n(assert (= ((_ extract 31 0) input@0_36) ((_ extract 255 224) input_0_64)))\n(assert (bvsgt Timestamp_1 Timestamp_0))\n(assert (bvsge CallValue_1\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0) CallValue_1))\n(assert (bvsge (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (bvslt CallDataSize_1\n               #x0000000000000000000000000000000000000000000000000000000000000004)\n        1\n        0)\n   0))\n(assert (distinct (ite (= (bvudiv input_1_0\n                          #x0000000100000000000000000000000000000000000000000000000000000000)\n                  #x000000000000000000000000000000000000000000000000000000006d4ce63c)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= CallValue_1\n                  #x0000000000000000000000000000000000000000000000000000000000000000)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= LastReturnType\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= #x0000000000000000000000000000000000000000000000000000000000000005\n   LastReturnValue))\n(assert (= LastReturnType\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= AttackerWallet\n   (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)))\n(assert (= FirstTimestamp Timestamp_0))\n(assert (= LastTimestamp Timestamp_1))\n(assert (= LastReturnValue (bvadd input@0_4 input@0_36)))\n(assert (= |61747461636b6572000000000000000000000000_Wallet|\n   (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)))\n(assert (= |636f6e7472616374000000000000000000000000_Wallet|\n   (bvadd (bvsub (bvadd CallValue_0\n                        #x0000000000000000000000000000000000000000000000000000000000000000\n                        CallValue_0\n                        CallValue_0\n                        CallValue_0\n                        CallValue_0\n                        CallValue_0\n                        #x0000000000000000000000000000000000000000000000000000000000000000\n                        CallValue_0\n                        #x0000000000000000000000000000000000000000000000004563918244f40000\n                        #x0000000000000000000000000000000000000000000000000000000000000000\n                        #x0000000000000000000000000000000000000000000000000000000000000000)\n                 #x0000000000000000000000000000000000000000000000004563918244f40000)\n          CallValue_0\n          #x0000000000000000000000000000000000000000000000004563918244f40000\n          CallValue_0\n          #x0000000000000000000000000000000000000000000000000000000000000000\n          #x0000000000000000000000000000000000000000000000000000000000000000\n          CallValue_0\n          #x0000000000000000000000000000000000000000000000000000000000000000\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_0\n          CallValue_1)))\n(assert (bvsge (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge (bvadd (bvsub (bvadd CallValue_0\n                            #x0000000000000000000000000000000000000000000000000000000000000000\n                            CallValue_0\n                            CallValue_0\n                            CallValue_0\n                            CallValue_0\n                            CallValue_0\n                            #x0000000000000000000000000000000000000000000000000000000000000000\n                            CallValue_0\n                            #x0000000000000000000000000000000000000000000000004563918244f40000\n                            #x0000000000000000000000000000000000000000000000000000000000000000\n                            #x0000000000000000000000000000000000000000000000000000000000000000)\n                     #x0000000000000000000000000000000000000000000000004563918244f40000)\n              CallValue_0\n              #x0000000000000000000000000000000000000000000000004563918244f40000\n              CallValue_0\n              #x0000000000000000000000000000000000000000000000000000000000000000\n              #x0000000000000000000000000000000000000000000000000000000000000000\n              CallValue_0\n              #x0000000000000000000000000000000000000000000000000000000000000000\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_0\n              CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(model-add LastReturnType\n           ()\n           (_ BitVec 256)\n           #x0000000000000000000000000000000000000000000000000000000000000000)\n(model-add LastReturnValue\n           ()\n           (_ BitVec 256)\n           #x0000000000000000000000000000000000000000000000000000000000000005)\n(model-add AttackerWallet\n           ()\n           (_ BitVec 256)\n           (bvadd AttackerWalletStarting\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_0)\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_1)))\n(model-add FirstTimestamp () (_ BitVec 256) Timestamp_0)\n(model-add LastTimestamp () (_ BitVec 256) Timestamp_1)\n(model-add |61747461636b6572000000000000000000000000_Wallet|\n           ()\n           (_ BitVec 256)\n           (bvadd AttackerWalletStarting\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_0)\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_1)))\n(model-add |636f6e7472616374000000000000000000000000_Wallet|\n           ()\n           (_ BitVec 256)\n           (bvadd #x0000000000000000000000000000000000000000000000004563918244f40000\n                  (bvmul #x0000000000000000000000000000000000000000000000000000000000000018\n                         CallValue_0)\n                  CallValue_1))\n(model-del k!44769)\n(model-add input_0_64\n           ()\n           (_ BitVec 256)\n           (concat k!44769\n                   #x00000000000000000000000000000000000000000000000000000000))\n(model-del k!44770)\n(model-add Timestamp_1\n           ()\n           (_ BitVec 256)\n           (ite (or k!44770\n                    (= Timestamp_0\n                       #x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))\n                Timestamp_0\n                (bvadd Timestamp_0\n                       #x0000000000000000000000000000000000000000000000000000000000000001)))\n(model-del k!44771)\n(model-add CallDataSize_1\n           ()\n           (_ BitVec 256)\n           (ite (or k!44771\n                    (= #x0000000000000000000000000000000000000000000000000000000000000004\n                       #x8000000000000000000000000000000000000000000000000000000000000000))\n                #x0000000000000000000000000000000000000000000000000000000000000004\n                (bvsub #x0000000000000000000000000000000000000000000000000000000000000004\n                       #x0000000000000000000000000000000000000000000000000000000000000001)))\n(model-del k!44772)\n(model-add input_1_0\n           ()\n           (_ BitVec 256)\n           (concat k!44772\n                   #x00000000000000000000000000000000000000000000000000000000))\n(model-del k!44773)\n(model-add k!44769\n           ()\n           (_ BitVec 32)\n           (ite k!44773\n                ((_ extract 31 0) input@0_36)\n                (bvnot ((_ extract 31 0) input@0_36))))\n(model-del k!44774)\n(model-add k!44770 () Bool (not k!44774))\n(model-del k!44775)\n(model-add k!44772 () (_ BitVec 32) (ite k!44775 #x6d4ce63c (bvnot #x6d4ce63c)))\n(model-del k!44776)\n(model-add Timestamp_0\n           ()\n           (_ BitVec 256)\n           (ite k!44776\n                #x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                (bvnot #x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)))\n(model-del k!44777)\n(model-add k!44776 () Bool (not k!44777))\n", "stats": {"eliminated vars": 1287, "eliminated applications": 9, "mk bool var": 755, "mk binary clause": 31873, "mk ternary clause": 1007, "mk clause": 250, "conflicts": 3, "propagations": 188, "decisions": 253, "binary propagations": 447, "ternary propagations": 255, "units": 1, "rlimit count": 22726875, "max memory": 18.61, "memory": 3.4, "num allocs": 27423587411.0}}