{"sexprs": "(declare-fun FirstTimestamp () (_ BitVec 256))\n(declare-fun LastReturnType () Int)\n(declare-fun AttackerWallet () (_ BitVec 256))\n(declare-fun CallValue_1 () (_ BitVec 256))\n(declare-fun CallValue_0 () (_ BitVec 256))\n(declare-fun AttackerWalletStarting () (_ BitVec 256))\n(declare-fun Timestamp_0 () (_ BitVec 256))\n(declare-fun LastTimestamp () (_ BitVec 256))\n(declare-fun Timestamp_1 () (_ BitVec 256))\n(declare-fun |61747461636b6572000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(declare-fun |636f6e7472616374000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(declare-fun k!42 () (_ BitVec 32))\n(declare-fun input_0_32 () (_ BitVec 256))\n(declare-fun k!43 () (_ BitVec 32))\n(declare-fun input_1_32 () (_ BitVec 256))\n(declare-fun k!44 () Bool)\n(declare-fun input@0_4 () (_ BitVec 256))\n(declare-fun k!45 () Bool)\n(declare-fun input@1_4 () (_ BitVec 256))\n(declare-fun k!46 () (_ BitVec 224))\n(declare-fun k!47 () Bool)\n(declare-fun input_1_0 () (_ BitVec 256))\n(declare-fun k!48 () (_ BitVec 32))\n(declare-fun k!49 () (_ BitVec 31))\n(declare-fun CallDataSize_0 () Int)\n(declare-fun input_0_0 () (_ BitVec 256))\n(declare-fun k!0 () (_ BitVec 256))\n(declare-fun CallDataSize_1 () Int)\n(assert (bvsge CallValue_0\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge AttackerWalletStarting CallValue_0))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (< CallDataSize_0 4) 1 0) 0))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x0000000000000000000000000000000000000000000000000000000027e235e3)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000003ccfd60b)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x0000000000000000000000000000000000000000000000000000000079af55e4)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= (bvudiv input_0_0\n                          #x0000000100000000000000000000000000000000000000000000000000000000)\n                  #x00000000000000000000000000000000000000000000000000000000a4beda63)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= CallValue_0\n                  #x0000000000000000000000000000000000000000000000000000000000000000)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (let ((a!1 (= (ite (< (- CallDataSize_0 4) 32) 1 0) 0)))\n  (distinct (ite a!1\n                 #x0000000000000000000000000000000000000000000000000000000000000001\n                 #x0000000000000000000000000000000000000000000000000000000000000000)\n            #x0000000000000000000000000000000000000000000000000000000000000000)))\n(assert (= ((_ extract 223 0) input_0_0) ((_ extract 255 32) input@0_4)))\n(assert (= ((_ extract 31 0) input@0_4) ((_ extract 255 224) input_0_32)))\n(assert (or (= (concat (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                      input@0_4)\n               #x0000000000000000000000000000000000000000000000000000000000000001)\n       #x00000000000000000000000061747461636b65720000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)\n    (= (concat (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                      input@0_4)\n               #x0000000000000000000000000000000000000000000000000000000000000001)\n       #x00000000000000000000000061747461636b65720000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))\n(assert (let ((a!1 (ite (= (concat (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                                  input@0_4)\n                           #x0000000000000000000000000000000000000000000000000000000000000001)\n                   #x00000000000000000000000061747461636b65720000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)\n                #xbb275759c0b89ac826546763f54b2999d5ffdf353798c8918271c3e578abdb52\n                k!0)))\n(let ((a!2 (ite (= (concat (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                                  input@0_4)\n                           #x0000000000000000000000000000000000000000000000000000000000000001)\n                   #x00000000000000000000000061747461636b65720000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)\n                #xc9287d18752a1f8e3452ceb377d7aa2588aa254181a1532d76c7505aeacbf0b1\n                a!1)))\n  (= a!2 #xc9287d18752a1f8e3452ceb377d7aa2588aa254181a1532d76c7505aeacbf0b1))))\n(assert (bvsgt Timestamp_1 Timestamp_0))\n(assert (bvsge CallValue_1\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0) CallValue_1))\n(assert (bvsge (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (< CallDataSize_1 4) 1 0) 0))\n(assert (= (ite (= (bvudiv input_1_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x0000000000000000000000000000000000000000000000000000000027e235e3)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_1_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000003ccfd60b)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= (bvudiv input_1_0\n                          #x0000000100000000000000000000000000000000000000000000000000000000)\n                  #x0000000000000000000000000000000000000000000000000000000079af55e4)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= CallValue_1\n                  #x0000000000000000000000000000000000000000000000000000000000000000)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (let ((a!1 (= (ite (< (- CallDataSize_1 4) 32) 1 0) 0)))\n  (distinct (ite a!1\n                 #x0000000000000000000000000000000000000000000000000000000000000001\n                 #x0000000000000000000000000000000000000000000000000000000000000000)\n            #x0000000000000000000000000000000000000000000000000000000000000000)))\n(assert (= ((_ extract 223 0) input_1_0) ((_ extract 255 32) input@1_4)))\n(assert (= ((_ extract 31 0) input@1_4) ((_ extract 255 224) input_1_32)))\n(assert (= FirstTimestamp\n   #x000000000000000000000000000000000000000000000000000000005a48df51))\n(assert (bvsgt (bvadd FirstTimestamp\n              #x0000000000000000000000000000000000000000000000000000000000093a80)\n       LastTimestamp))\n(assert (bvsgt AttackerWallet AttackerWalletStarting))\n(assert (= LastReturnType 2))\n(assert (= AttackerWallet\n   (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)))\n(assert (= FirstTimestamp Timestamp_0))\n(assert (= LastTimestamp Timestamp_1))\n(assert (= |61747461636b6572000000000000000000000000_Wallet|\n   (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)))\n(assert (= |636f6e7472616374000000000000000000000000_Wallet|\n   (bvadd CallValue_0\n          #x0000000000000000000000000000000000000000000000004563918244f40000\n          CallValue_1)))\n(assert (bvsge (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge (bvadd CallValue_0\n              #x0000000000000000000000000000000000000000000000004563918244f40000\n              CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(model-add FirstTimestamp\n           ()\n           (_ BitVec 256)\n           #x000000000000000000000000000000000000000000000000000000005a48df51)\n(model-add LastReturnType () Int 2)\n(model-add AttackerWallet\n           ()\n           (_ BitVec 256)\n           (bvadd AttackerWalletStarting\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_0)\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_1)))\n(model-add Timestamp_0\n           ()\n           (_ BitVec 256)\n           #x000000000000000000000000000000000000000000000000000000005a48df51)\n(model-add LastTimestamp () (_ BitVec 256) Timestamp_1)\n(model-add |61747461636b6572000000000000000000000000_Wallet|\n           ()\n           (_ BitVec 256)\n           (bvadd AttackerWalletStarting\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_0)\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_1)))\n(model-add |636f6e7472616374000000000000000000000000_Wallet|\n           ()\n           (_ BitVec 256)\n           (bvadd #x0000000000000000000000000000000000000000000000004563918244f40000\n                  CallValue_0\n                  CallValue_1))\n(model-del k!42)\n(model-add input_0_32\n           ()\n           (_ BitVec 256)\n           (concat k!42\n                   #x00000000000000000000000000000000000000000000000000000000))\n(model-del k!43)\n(model-add input_1_32\n           ()\n           (_ BitVec 256)\n           (concat k!43\n                   #x00000000000000000000000000000000000000000000000000000000))\n(model-del k!44)\n(model-add k!42\n           ()\n           (_ BitVec 32)\n           (ite k!44\n                ((_ extract 31 0) input@0_4)\n                (bvnot ((_ extract 31 0) input@0_4))))\n(model-del k!45)\n(model-add k!43\n           ()\n           (_ BitVec 32)\n           (ite k!45\n                ((_ extract 31 0) input@1_4)\n                (bvnot ((_ extract 31 0) input@1_4))))\n(model-del k!46)\n(model-add input@1_4 () (_ BitVec 256) (concat k!46 #x00000000))\n(model-del k!47)\n(model-add k!46\n           ()\n           (_ BitVec 224)\n           (ite k!47\n                ((_ extract 223 0) input_1_0)\n                (bvnot ((_ extract 223 0) input_1_0))))\n(model-del k!48)\n(model-add input_1_0\n           ()\n           (_ BitVec 256)\n           (concat k!48\n                   #x00000000000000000000000000000000000000000000000000000000))\n(model-del k!49)\n(model-add Timestamp_1\n           ()\n           (_ BitVec 256)\n           (concat #b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n                   k!49))\n", "stats": {"mk bool var": 10153, "eliminated vars": 7, "eliminated applications": 7, "conflicts": 287, "decisions": 31018, "propagations": 163117, "binary propagations": 110550, "restarts": 2, "added eqs": 69, "mk clause": 24278, "del clause": 20278, "num checks": 1, "bv dynamic diseqs": 7, "bv bit2core": 2582, "bv->core eq": 3, "bv dynamic eqs": 3, "num allocs": 343878806, "rlimit count": 11415269, "max memory": 9.41, "memory": 3.27}}