{"sexprs": "(declare-fun FirstTimestamp () (_ BitVec 256))\n(declare-fun LastReturnType () Int)\n(declare-fun AttackerWallet () (_ BitVec 256))\n(declare-fun CallValue_1 () (_ BitVec 256))\n(declare-fun CallValue_0 () (_ BitVec 256))\n(declare-fun AttackerWalletStarting () (_ BitVec 256))\n(declare-fun Timestamp_0 () (_ BitVec 256))\n(declare-fun LastTimestamp () (_ BitVec 256))\n(declare-fun Timestamp_1 () (_ BitVec 256))\n(declare-fun |61747461636b6572000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(declare-fun |636f6e7472616374000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(declare-fun k!546 () Bool)\n(declare-fun CallDataSize_0 () Int)\n(declare-fun k!547 () (_ BitVec 32))\n(declare-fun input_0_0 () (_ BitVec 256))\n(declare-fun k!548 () Bool)\n(declare-fun CallDataSize_1 () Int)\n(declare-fun k!549 () (_ BitVec 32))\n(declare-fun input_1_0 () (_ BitVec 256))\n(declare-fun k!550 () (_ BitVec 31))\n(assert (bvsge CallValue_0\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge AttackerWalletStarting CallValue_0))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (< CallDataSize_0 4) 1 0) 0))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x0000000000000000000000000000000000000000000000000000000027e235e3)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000003ccfd60b)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x0000000000000000000000000000000000000000000000000000000079af55e4)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x00000000000000000000000000000000000000000000000000000000a4beda63)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= (bvudiv input_0_0\n                          #x0000000100000000000000000000000000000000000000000000000000000000)\n                  #x00000000000000000000000000000000000000000000000000000000d0e30db0)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsgt Timestamp_1 Timestamp_0))\n(assert (bvsge CallValue_1\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0) CallValue_1))\n(assert (bvsge (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (< CallDataSize_1 4) 1 0) 0))\n(assert (= (ite (= (bvudiv input_1_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x0000000000000000000000000000000000000000000000000000000027e235e3)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_1_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000003ccfd60b)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_1_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x0000000000000000000000000000000000000000000000000000000079af55e4)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_1_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x00000000000000000000000000000000000000000000000000000000a4beda63)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= (bvudiv input_1_0\n                          #x0000000100000000000000000000000000000000000000000000000000000000)\n                  #x00000000000000000000000000000000000000000000000000000000d0e30db0)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= FirstTimestamp\n   #x000000000000000000000000000000000000000000000000000000005a48df51))\n(assert (bvsgt (bvadd FirstTimestamp\n              #x0000000000000000000000000000000000000000000000000000000000093a80)\n       LastTimestamp))\n(assert (bvsgt AttackerWallet AttackerWalletStarting))\n(assert (= LastReturnType 2))\n(assert (= AttackerWallet\n   (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)))\n(assert (= FirstTimestamp Timestamp_0))\n(assert (= LastTimestamp Timestamp_1))\n(assert (= |61747461636b6572000000000000000000000000_Wallet|\n   (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)))\n(assert (= |636f6e7472616374000000000000000000000000_Wallet|\n   (bvadd CallValue_0\n          #x0000000000000000000000000000000000000000000000004563918244f40000\n          CallValue_1)))\n(assert (bvsge (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge (bvadd CallValue_0\n              #x0000000000000000000000000000000000000000000000004563918244f40000\n              CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(model-add FirstTimestamp\n           ()\n           (_ BitVec 256)\n           #x000000000000000000000000000000000000000000000000000000005a48df51)\n(model-add LastReturnType () Int 2)\n(model-add AttackerWallet\n           ()\n           (_ BitVec 256)\n           (bvadd AttackerWalletStarting\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_0)\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_1)))\n(model-add Timestamp_0\n           ()\n           (_ BitVec 256)\n           #x000000000000000000000000000000000000000000000000000000005a48df51)\n(model-add LastTimestamp () (_ BitVec 256) Timestamp_1)\n(model-add |61747461636b6572000000000000000000000000_Wallet|\n           ()\n           (_ BitVec 256)\n           (bvadd AttackerWalletStarting\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_0)\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_1)))\n(model-add |636f6e7472616374000000000000000000000000_Wallet|\n           ()\n           (_ BitVec 256)\n           (bvadd #x0000000000000000000000000000000000000000000000004563918244f40000\n                  CallValue_0\n                  CallValue_1))\n(model-del k!546)\n(model-add CallDataSize_0 () Int (ite k!546 4 (+ 4 (- 1))))\n(model-del k!547)\n(model-add input_0_0\n           ()\n           (_ BitVec 256)\n           (concat k!547\n                   #x00000000000000000000000000000000000000000000000000000000))\n(model-del k!548)\n(model-add CallDataSize_1 () Int (ite k!548 4 (+ 4 (- 1))))\n(model-del k!549)\n(model-add input_1_0\n           ()\n           (_ BitVec 256)\n           (concat k!549\n                   #x00000000000000000000000000000000000000000000000000000000))\n(model-del k!550)\n(model-add Timestamp_1\n           ()\n           (_ BitVec 256)\n           (concat #b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n                   k!550))\n", "stats": {"eliminated vars": 79, "eliminated applications": 4, "mk bool var": 9463, "mk binary clause": 80686, "mk ternary clause": 21752, "mk clause": 28739, "del clause": 33430, "conflicts": 14335, "propagations": 931089, "decisions": 208989, "binary propagations": 1257591, "ternary propagations": 1462244, "restarts": 1344, "minimized lits": 57837, "dyn subsumption resolution": 30801, "units": 1460, "elim bool vars res": 4376, "elim clauses": 12818, "elim literals": 153, "subsumed": 3990, "subsumption resolution": 153, "elim bool vars scc": 6, "elim binary": 1, "num allocs": 257711676, "rlimit count": 7026107, "max memory": 15.02, "memory": 2.08}}