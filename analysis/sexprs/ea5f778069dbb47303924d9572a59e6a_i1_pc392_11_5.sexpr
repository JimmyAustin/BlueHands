{"sexprs": "(declare-fun CallValue_0 () (_ BitVec 256))\n(declare-fun AttackerWalletStarting () (_ BitVec 256))\n(declare-fun CallDataSize_0 () (_ BitVec 256))\n(declare-fun input_0_0 () (_ BitVec 256))\n(declare-fun input@0_4 () (_ BitVec 256))\n(declare-fun input_0_32 () (_ BitVec 256))\n(declare-fun k!0 () (_ BitVec 256))\n(declare-fun Timestamp_0 () (_ BitVec 256))\n(declare-fun Timestamp_1 () (_ BitVec 256))\n(declare-fun CallValue_1 () (_ BitVec 256))\n(declare-fun CallDataSize_1 () (_ BitVec 256))\n(declare-fun input_1_0 () (_ BitVec 256))\n(declare-fun input@1_4 () (_ BitVec 256))\n(declare-fun input_1_32 () (_ BitVec 256))\n(declare-fun FirstTimestamp () (_ BitVec 256))\n(declare-fun LastTimestamp () (_ BitVec 256))\n(declare-fun AttackerWallet () (_ BitVec 256))\n(declare-fun LastReturnType () (_ BitVec 256))\n(declare-fun LastReturnValue () (_ BitVec 256))\n(declare-fun |61747461636b6572000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(declare-fun |636f6e7472616374000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(assert (bvsge CallValue_0\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge AttackerWalletStarting CallValue_0))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (bvslt CallDataSize_0\n               #x0000000000000000000000000000000000000000000000000000000000000004)\n        1\n        0)\n   0))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x0000000000000000000000000000000000000000000000000000000027e235e3)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000003ccfd60b)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x0000000000000000000000000000000000000000000000000000000079af55e4)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= (bvudiv input_0_0\n                          #x0000000100000000000000000000000000000000000000000000000000000000)\n                  #x00000000000000000000000000000000000000000000000000000000a4beda63)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= CallValue_0\n                  #x0000000000000000000000000000000000000000000000000000000000000000)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (let ((a!1 (= (ite (bvslt (bvsub CallDataSize_0\n                                 #x0000000000000000000000000000000000000000000000000000000000000004)\n                          #x0000000000000000000000000000000000000000000000000000000000000020)\n                   1\n                   0)\n              0)))\n  (distinct (ite a!1\n                 #x0000000000000000000000000000000000000000000000000000000000000001\n                 #x0000000000000000000000000000000000000000000000000000000000000000)\n            #x0000000000000000000000000000000000000000000000000000000000000000)))\n(assert (= ((_ extract 223 0) input_0_0) ((_ extract 255 32) input@0_4)))\n(assert (= ((_ extract 31 0) input@0_4) ((_ extract 255 224) input_0_32)))\n(assert (or (= (concat (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                      input@0_4)\n               #x0000000000000000000000000000000000000000000000000000000000000001)\n       #x00000000000000000000000061747461636b65720000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)\n    (= (concat (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                      input@0_4)\n               #x0000000000000000000000000000000000000000000000000000000000000001)\n       #x00000000000000000000000061747461636b65720000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))\n(assert (let ((a!1 (ite (= (concat (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                                  input@0_4)\n                           #x0000000000000000000000000000000000000000000000000000000000000001)\n                   #x00000000000000000000000061747461636b65720000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)\n                #xbb275759c0b89ac826546763f54b2999d5ffdf353798c8918271c3e578abdb52\n                k!0)))\n(let ((a!2 (ite (= (concat (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                                  input@0_4)\n                           #x0000000000000000000000000000000000000000000000000000000000000001)\n                   #x00000000000000000000000061747461636b65720000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)\n                #xc9287d18752a1f8e3452ceb377d7aa2588aa254181a1532d76c7505aeacbf0b1\n                a!1)))\n  (= a!2 #xc9287d18752a1f8e3452ceb377d7aa2588aa254181a1532d76c7505aeacbf0b1))))\n(assert (bvsgt Timestamp_1 Timestamp_0))\n(assert (bvsge CallValue_1\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0) CallValue_1))\n(assert (bvsge (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (bvslt CallDataSize_1\n               #x0000000000000000000000000000000000000000000000000000000000000004)\n        1\n        0)\n   0))\n(assert (= (ite (= (bvudiv input_1_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x0000000000000000000000000000000000000000000000000000000027e235e3)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_1_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000003ccfd60b)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_1_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x0000000000000000000000000000000000000000000000000000000079af55e4)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= (bvudiv input_1_0\n                          #x0000000100000000000000000000000000000000000000000000000000000000)\n                  #x00000000000000000000000000000000000000000000000000000000a4beda63)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= CallValue_1\n                  #x0000000000000000000000000000000000000000000000000000000000000000)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (let ((a!1 (= (ite (bvslt (bvsub CallDataSize_1\n                                 #x0000000000000000000000000000000000000000000000000000000000000004)\n                          #x0000000000000000000000000000000000000000000000000000000000000020)\n                   1\n                   0)\n              0)))\n  (distinct (ite a!1\n                 #x0000000000000000000000000000000000000000000000000000000000000001\n                 #x0000000000000000000000000000000000000000000000000000000000000000)\n            #x0000000000000000000000000000000000000000000000000000000000000000)))\n(assert (= ((_ extract 223 0) input_1_0) ((_ extract 255 32) input@1_4)))\n(assert (= ((_ extract 31 0) input@1_4) ((_ extract 255 224) input_1_32)))\n(assert (or (= (concat (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                      input@1_4)\n               #x0000000000000000000000000000000000000000000000000000000000000001)\n       #x00000000000000000000000061747461636b65720000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)\n    (= (concat (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                      input@1_4)\n               #x0000000000000000000000000000000000000000000000000000000000000001)\n       #x00000000000000000000000061747461636b65720000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))\n(assert (let ((a!1 (ite (= (concat (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                                  input@1_4)\n                           #x0000000000000000000000000000000000000000000000000000000000000001)\n                   #x00000000000000000000000061747461636b65720000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)\n                #xbb275759c0b89ac826546763f54b2999d5ffdf353798c8918271c3e578abdb52\n                k!0)))\n(let ((a!2 (ite (= (concat (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                                  input@1_4)\n                           #x0000000000000000000000000000000000000000000000000000000000000001)\n                   #x00000000000000000000000061747461636b65720000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)\n                #xc9287d18752a1f8e3452ceb377d7aa2588aa254181a1532d76c7505aeacbf0b1\n                a!1)))\n  (= a!2 #xbb275759c0b89ac826546763f54b2999d5ffdf353798c8918271c3e578abdb52))))\n(assert (= FirstTimestamp\n   #x000000000000000000000000000000000000000000000000000000005a48df51))\n(assert (bvsgt (bvadd FirstTimestamp\n              #x0000000000000000000000000000000000000000000000000000000000093a80)\n       LastTimestamp))\n(assert (bvsgt AttackerWallet AttackerWalletStarting))\n(assert (= LastReturnType\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= AttackerWallet\n   (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)))\n(assert (= FirstTimestamp Timestamp_0))\n(assert (= LastTimestamp Timestamp_1))\n(assert (= #x0000000000000000000000000000000000000000000000004563918244f40000\n   LastReturnValue))\n(assert (= |61747461636b6572000000000000000000000000_Wallet|\n   (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)))\n(assert (= |636f6e7472616374000000000000000000000000_Wallet|\n   (bvadd (bvsub (bvadd CallValue_0\n                        #x0000000000000000000000000000000000000000000000000000000000000000\n                        CallValue_0\n                        CallValue_0\n                        CallValue_0\n                        CallValue_0\n                        CallValue_0\n                        #x0000000000000000000000000000000000000000000000000000000000000000\n                        CallValue_0\n                        #x0000000000000000000000000000000000000000000000004563918244f40000\n                        #x0000000000000000000000000000000000000000000000000000000000000000\n                        #x0000000000000000000000000000000000000000000000000000000000000000)\n                 #x0000000000000000000000000000000000000000000000004563918244f40000)\n          CallValue_0\n          #x0000000000000000000000000000000000000000000000004563918244f40000\n          CallValue_1)))\n(assert (bvsge (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge (bvadd (bvsub (bvadd CallValue_0\n                            #x0000000000000000000000000000000000000000000000000000000000000000\n                            CallValue_0\n                            CallValue_0\n                            CallValue_0\n                            CallValue_0\n                            CallValue_0\n                            #x0000000000000000000000000000000000000000000000000000000000000000\n                            CallValue_0\n                            #x0000000000000000000000000000000000000000000000004563918244f40000\n                            #x0000000000000000000000000000000000000000000000000000000000000000\n                            #x0000000000000000000000000000000000000000000000000000000000000000)\n                     #x0000000000000000000000000000000000000000000000004563918244f40000)\n              CallValue_0\n              #x0000000000000000000000000000000000000000000000004563918244f40000\n              CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n", "stats": {"mk bool var": 1, "num checks": 1, "rlimit count": 17959814, "max memory": 45.12, "memory": 7.0, "num allocs": 7211783605.0}}