{"sexprs": "(declare-fun FirstTimestamp () (_ BitVec 256))\n(declare-fun LastReturnType () Int)\n(declare-fun AttackerWallet () (_ BitVec 256))\n(declare-fun CallValue_1 () (_ BitVec 256))\n(declare-fun CallValue_0 () (_ BitVec 256))\n(declare-fun AttackerWalletStarting () (_ BitVec 256))\n(declare-fun Timestamp_0 () (_ BitVec 256))\n(declare-fun LastTimestamp () (_ BitVec 256))\n(declare-fun Timestamp_1 () (_ BitVec 256))\n(declare-fun |61747461636b6572000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(declare-fun |636f6e7472616374000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(declare-fun k!2335 () (_ BitVec 32))\n(declare-fun input_0_32 () (_ BitVec 256))\n(declare-fun k!2336 () Bool)\n(declare-fun CallDataSize_1 () Int)\n(declare-fun k!2337 () (_ BitVec 32))\n(declare-fun input_1_0 () (_ BitVec 256))\n(declare-fun k!2338 () Bool)\n(declare-fun input@0_4 () (_ BitVec 256))\n(declare-fun k!2339 () (_ BitVec 224))\n(declare-fun k!2340 () Bool)\n(declare-fun input_0_0 () (_ BitVec 256))\n(declare-fun k!2341 () (_ BitVec 32))\n(declare-fun k!2342 () (_ BitVec 31))\n(declare-fun CallDataSize_0 () Int)\n(assert (bvsge CallValue_0\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge AttackerWalletStarting CallValue_0))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (< CallDataSize_0 4) 1 0) 0))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x0000000000000000000000000000000000000000000000000000000027e235e3)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000003ccfd60b)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= (bvudiv input_0_0\n                          #x0000000100000000000000000000000000000000000000000000000000000000)\n                  #x0000000000000000000000000000000000000000000000000000000079af55e4)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= CallValue_0\n                  #x0000000000000000000000000000000000000000000000000000000000000000)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (let ((a!1 (= (ite (< (- CallDataSize_0 4) 32) 1 0) 0)))\n  (distinct (ite a!1\n                 #x0000000000000000000000000000000000000000000000000000000000000001\n                 #x0000000000000000000000000000000000000000000000000000000000000000)\n            #x0000000000000000000000000000000000000000000000000000000000000000)))\n(assert (= ((_ extract 223 0) input_0_0) ((_ extract 255 32) input@0_4)))\n(assert (= ((_ extract 31 0) input@0_4) ((_ extract 255 224) input_0_32)))\n(assert (bvsgt Timestamp_1 Timestamp_0))\n(assert (bvsge CallValue_1\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0) CallValue_1))\n(assert (bvsge (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (< CallDataSize_1 4) 1 0) 0))\n(assert (= (ite (= (bvudiv input_1_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x0000000000000000000000000000000000000000000000000000000027e235e3)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_1_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000003ccfd60b)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_1_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x0000000000000000000000000000000000000000000000000000000079af55e4)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_1_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x00000000000000000000000000000000000000000000000000000000a4beda63)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= (bvudiv input_1_0\n                          #x0000000100000000000000000000000000000000000000000000000000000000)\n                  #x00000000000000000000000000000000000000000000000000000000d0e30db0)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= FirstTimestamp\n   #x000000000000000000000000000000000000000000000000000000005a48df51))\n(assert (bvsgt (bvadd FirstTimestamp\n              #x0000000000000000000000000000000000000000000000000000000000093a80)\n       LastTimestamp))\n(assert (bvsgt AttackerWallet AttackerWalletStarting))\n(assert (= LastReturnType 2))\n(assert (= AttackerWallet\n   (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)))\n(assert (= FirstTimestamp Timestamp_0))\n(assert (= LastTimestamp Timestamp_1))\n(assert (= |61747461636b6572000000000000000000000000_Wallet|\n   (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)))\n(assert (= |636f6e7472616374000000000000000000000000_Wallet|\n   (bvadd (bvsub (bvadd CallValue_0\n                        #x0000000000000000000000000000000000000000000000000000000000000000\n                        CallValue_0\n                        CallValue_0\n                        CallValue_0\n                        CallValue_0\n                        CallValue_0\n                        #x0000000000000000000000000000000000000000000000000000000000000000\n                        CallValue_0\n                        #x0000000000000000000000000000000000000000000000004563918244f40000\n                        #x0000000000000000000000000000000000000000000000000000000000000000\n                        #x0000000000000000000000000000000000000000000000000000000000000000)\n                 #x0000000000000000000000000000000000000000000000004563918244f40000)\n          CallValue_0\n          #x0000000000000000000000000000000000000000000000004563918244f40000\n          CallValue_1)))\n(assert (bvsge (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge (bvadd (bvsub (bvadd CallValue_0\n                            #x0000000000000000000000000000000000000000000000000000000000000000\n                            CallValue_0\n                            CallValue_0\n                            CallValue_0\n                            CallValue_0\n                            CallValue_0\n                            #x0000000000000000000000000000000000000000000000000000000000000000\n                            CallValue_0\n                            #x0000000000000000000000000000000000000000000000004563918244f40000\n                            #x0000000000000000000000000000000000000000000000000000000000000000\n                            #x0000000000000000000000000000000000000000000000000000000000000000)\n                     #x0000000000000000000000000000000000000000000000004563918244f40000)\n              CallValue_0\n              #x0000000000000000000000000000000000000000000000004563918244f40000\n              CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(model-add FirstTimestamp\n           ()\n           (_ BitVec 256)\n           #x000000000000000000000000000000000000000000000000000000005a48df51)\n(model-add LastReturnType () Int 2)\n(model-add AttackerWallet\n           ()\n           (_ BitVec 256)\n           (bvadd AttackerWalletStarting\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_0)\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_1)))\n(model-add Timestamp_0\n           ()\n           (_ BitVec 256)\n           #x000000000000000000000000000000000000000000000000000000005a48df51)\n(model-add LastTimestamp () (_ BitVec 256) Timestamp_1)\n(model-add |61747461636b6572000000000000000000000000_Wallet|\n           ()\n           (_ BitVec 256)\n           (bvadd AttackerWalletStarting\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_0)\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_1)))\n(model-add |636f6e7472616374000000000000000000000000_Wallet|\n           ()\n           (_ BitVec 256)\n           (bvadd #x0000000000000000000000000000000000000000000000004563918244f40000\n                  (bvmul #x0000000000000000000000000000000000000000000000000000000000000008\n                         CallValue_0)\n                  CallValue_1))\n(model-del k!2335)\n(model-add input_0_32\n           ()\n           (_ BitVec 256)\n           (concat k!2335\n                   #x00000000000000000000000000000000000000000000000000000000))\n(model-del k!2336)\n(model-add CallDataSize_1 () Int (ite k!2336 4 (+ 4 (- 1))))\n(model-del k!2337)\n(model-add input_1_0\n           ()\n           (_ BitVec 256)\n           (concat k!2337\n                   #x00000000000000000000000000000000000000000000000000000000))\n(model-del k!2338)\n(model-add k!2335\n           ()\n           (_ BitVec 32)\n           (ite k!2338\n                ((_ extract 31 0) input@0_4)\n                (bvnot ((_ extract 31 0) input@0_4))))\n(model-del k!2339)\n(model-add input@0_4 () (_ BitVec 256) (concat k!2339 #x00000000))\n(model-del k!2340)\n(model-add k!2339\n           ()\n           (_ BitVec 224)\n           (ite k!2340\n                ((_ extract 223 0) input_0_0)\n                (bvnot ((_ extract 223 0) input_0_0))))\n(model-del k!2341)\n(model-add input_0_0\n           ()\n           (_ BitVec 256)\n           (concat k!2341\n                   #x00000000000000000000000000000000000000000000000000000000))\n(model-del k!2342)\n(model-add Timestamp_1\n           ()\n           (_ BitVec 256)\n           (concat #b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n                   k!2342))\n", "stats": {"eliminated vars": 7, "eliminated applications": 7, "conflicts": 1799, "decisions": 80739, "propagations": 911538, "binary propagations": 397009, "restarts": 15, "added eqs": 357, "mk clause": 170331, "del clause": 164506, "minimized lits": 710, "num checks": 1, "mk bool var": 98372, "bv diseqs": 1, "bv bit2core": 320, "bv->core eq": 177, "bv dynamic eqs": 177, "num allocs": 1350492542, "rlimit count": 15477966, "max memory": 15.51, "memory": 6.77}}