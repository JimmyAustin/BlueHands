{"sexprs": "(declare-fun LastReturnType () Int)\n(declare-fun AttackerWallet () (_ BitVec 256))\n(declare-fun input@1_36 () (_ BitVec 256))\n(declare-fun CallValue_1 () (_ BitVec 256))\n(declare-fun CallValue_0 () (_ BitVec 256))\n(declare-fun AttackerWalletStarting () (_ BitVec 256))\n(declare-fun FirstTimestamp () (_ BitVec 256))\n(declare-fun Timestamp_0 () (_ BitVec 256))\n(declare-fun LastTimestamp () (_ BitVec 256))\n(declare-fun Timestamp_1 () (_ BitVec 256))\n(declare-fun |61747461636b6572000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(declare-fun |636f6e7472616374000000000000000000000000_Wallet|\n             ()\n             (_ BitVec 256))\n(declare-fun k!5409 () (_ BitVec 32))\n(declare-fun input_0_32 () (_ BitVec 256))\n(declare-fun k!5410 () Bool)\n(declare-fun k!5411 () (_ BitVec 32))\n(declare-fun input_1_64 () (_ BitVec 256))\n(declare-fun k!5412 () Bool)\n(declare-fun input@0_4 () (_ BitVec 256))\n(declare-fun k!5413 () Bool)\n(declare-fun k!5414 () Bool)\n(declare-fun k!5415 () Bool)\n(declare-fun k!5416 () Bool)\n(declare-fun CallDataSize_0 () Int)\n(declare-fun input_0_0 () (_ BitVec 256))\n(declare-fun CallDataSize_1 () Int)\n(declare-fun input_1_0 () (_ BitVec 256))\n(declare-fun input@1_4 () (_ BitVec 256))\n(declare-fun input_1_32 () (_ BitVec 256))\n(declare-fun k!0 () (_ BitVec 256))\n(assert (bvsge CallValue_0\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge AttackerWalletStarting CallValue_0))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (< CallDataSize_0 4) 1 0) 0))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000002e1a7d4d)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (= (bvudiv input_0_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000003fb2a74e)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= (bvudiv input_0_0\n                          #x0000000100000000000000000000000000000000000000000000000000000000)\n                  #x000000000000000000000000000000000000000000000000000000004e0a3379)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= CallValue_0\n                  #x0000000000000000000000000000000000000000000000000000000000000000)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (let ((a!1 (= (ite (< (- CallDataSize_0 4) 32) 1 0) 0)))\n  (distinct (ite a!1\n                 #x0000000000000000000000000000000000000000000000000000000000000001\n                 #x0000000000000000000000000000000000000000000000000000000000000000)\n            #x0000000000000000000000000000000000000000000000000000000000000000)))\n(assert (= ((_ extract 223 0) input_0_0) ((_ extract 255 32) input@0_4)))\n(assert (= ((_ extract 31 0) input@0_4) ((_ extract 255 224) input_0_32)))\n(assert (bvsgt Timestamp_1 Timestamp_0))\n(assert (bvsge CallValue_1\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (bvsge (bvsub AttackerWalletStarting CallValue_0) CallValue_1))\n(assert (bvsge (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (= (ite (< CallDataSize_1 4) 1 0) 0))\n(assert (= (ite (= (bvudiv input_1_0\n                   #x0000000100000000000000000000000000000000000000000000000000000000)\n           #x000000000000000000000000000000000000000000000000000000002e1a7d4d)\n        #x0000000000000000000000000000000000000000000000000000000000000001\n        #x0000000000000000000000000000000000000000000000000000000000000000)\n   #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= (bvudiv input_1_0\n                          #x0000000100000000000000000000000000000000000000000000000000000000)\n                  #x000000000000000000000000000000000000000000000000000000003fb2a74e)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (distinct (ite (= CallValue_1\n                  #x0000000000000000000000000000000000000000000000000000000000000000)\n               #x0000000000000000000000000000000000000000000000000000000000000001\n               #x0000000000000000000000000000000000000000000000000000000000000000)\n          #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (let ((a!1 (= (ite (< (- CallDataSize_1 4) 64) 1 0) 0)))\n  (distinct (ite a!1\n                 #x0000000000000000000000000000000000000000000000000000000000000001\n                 #x0000000000000000000000000000000000000000000000000000000000000000)\n            #x0000000000000000000000000000000000000000000000000000000000000000)))\n(assert (= ((_ extract 223 0) input_1_0) ((_ extract 255 32) input@1_4)))\n(assert (= ((_ extract 31 0) input@1_4) ((_ extract 255 224) input_1_32)))\n(assert (= ((_ extract 223 0) input_1_32) ((_ extract 255 32) input@1_36)))\n(assert (= ((_ extract 31 0) input@1_36) ((_ extract 255 224) input_1_64)))\n(assert (let ((a!1 (bvudiv (bvor (bvmul (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                                       #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                                       input@0_4)\n                                #x0000000000000000000000000000000000000000000000000000000000000001)\n                         #x0000000000000000000000000000000000000000000000000000000000000000)\n                   #x0000000000000000000000000000000000000000000000000000000000000001)))\n(let ((a!2 (= (ite (= (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                             #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                             a!1)\n                      #x00000000000000000000000061747461636b6572000000000000000000000000)\n                   #x0000000000000000000000000000000000000000000000000000000000000001\n                   #x0000000000000000000000000000000000000000000000000000000000000000)\n              #x0000000000000000000000000000000000000000000000000000000000000000)))\n  (distinct (ite (= (ite a!2\n                         #x0000000000000000000000000000000000000000000000000000000000000001\n                         #x0000000000000000000000000000000000000000000000000000000000000000)\n                    #x0000000000000000000000000000000000000000000000000000000000000000)\n                 #x0000000000000000000000000000000000000000000000000000000000000001\n                 #x0000000000000000000000000000000000000000000000000000000000000000)\n            #x0000000000000000000000000000000000000000000000000000000000000000))))\n(assert (or (= (concat (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                      #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                      #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                      input@1_4)\n               #x0000000000000000000000000000000000000000000000000000000000000001)\n       #x00000000000000000000000058434630580000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))\n(assert (let ((a!1 (ite (= (concat (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                                  #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                                  #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                                  input@1_4)\n                           #x0000000000000000000000000000000000000000000000000000000000000001)\n                   #x00000000000000000000000058434630580000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)\n                #x1009eacd8db20b14a57f65e43fc37a49a1a0c56f68c44d972a57ce2ef14715aa\n                k!0)))\n  (= a!1 #x1009eacd8db20b14a57f65e43fc37a49a1a0c56f68c44d972a57ce2ef14715aa)))\n(assert (let ((a!1 (ite (= (ite (bvsgt input@1_36\n                               #x0000000000000000000000000000000000000000000000004563918244f40000)\n                        1\n                        0)\n                   0)\n                #x0000000000000000000000000000000000000000000000000000000000000001\n                #x0000000000000000000000000000000000000000000000000000000000000000)))\n(let ((a!2 (ite (= (ite (= a!1\n                           #x0000000000000000000000000000000000000000000000000000000000000000)\n                        #x0000000000000000000000000000000000000000000000000000000000000001\n                        #x0000000000000000000000000000000000000000000000000000000000000000)\n                   #x0000000000000000000000000000000000000000000000000000000000000000)\n                #x0000000000000000000000000000000000000000000000000000000000000001\n                #x0000000000000000000000000000000000000000000000000000000000000000)))\n  (distinct a!2\n            #x0000000000000000000000000000000000000000000000000000000000000000))))\n(assert (or (= (concat (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                      #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                      #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                      input@1_4)\n               #x0000000000000000000000000000000000000000000000000000000000000001)\n       #x00000000000000000000000058434630580000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))\n(assert (let ((a!1 (ite (= (concat (bvand #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                                  #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                                  #x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                                  input@1_4)\n                           #x0000000000000000000000000000000000000000000000000000000000000001)\n                   #x00000000000000000000000058434630580000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)\n                #x1009eacd8db20b14a57f65e43fc37a49a1a0c56f68c44d972a57ce2ef14715aa\n                k!0)))\n  (= a!1 #x1009eacd8db20b14a57f65e43fc37a49a1a0c56f68c44d972a57ce2ef14715aa)))\n(assert (let ((a!1 (bvsub (bvadd (bvsub (bvadd CallValue_0\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       CallValue_0\n                                       #x0000000000000000000000000000000000000000000000004563918244f40000\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       #x0000000000000000000000000000000000000000000000000000000000000000)\n                                #x0000000000000000000000000000000000000000000000004563918244f40000)\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000004563918244f40000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000002faf080\n                         CallValue_0\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000004563918244f40000\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000000000000000000000)\n                  #x0000000000000000000000000000000000000000000000004563918244f40000)))\n  (bvsge (bvadd a!1\n                CallValue_0\n                #x0000000000000000000000000000000000000000000000000000000000000000\n                #x0000000000000000000000000000000000000000000000004563918244f40000\n                #x0000000000000000000000000000000000000000000000000000000000000000\n                CallValue_0\n                #x0000000000000000000000000000000000000000000000000000000000000000\n                #x0000000000000000000000000000000000000000000000004563918244f40000\n                CallValue_1)\n         input@1_36)))\n(assert (let ((a!1 (bvsub (bvadd (bvsub (bvadd CallValue_0\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       CallValue_0\n                                       #x0000000000000000000000000000000000000000000000004563918244f40000\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       #x0000000000000000000000000000000000000000000000000000000000000000)\n                                #x0000000000000000000000000000000000000000000000004563918244f40000)\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000004563918244f40000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000002faf080\n                         CallValue_0\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000004563918244f40000\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000000000000000000000)\n                  #x0000000000000000000000000000000000000000000000004563918244f40000)))\n  (bvsge (bvsub (bvadd a!1\n                       CallValue_0\n                       #x0000000000000000000000000000000000000000000000000000000000000000\n                       #x0000000000000000000000000000000000000000000000004563918244f40000\n                       #x0000000000000000000000000000000000000000000000000000000000000000\n                       CallValue_0\n                       #x0000000000000000000000000000000000000000000000000000000000000000\n                       #x0000000000000000000000000000000000000000000000004563918244f40000\n                       CallValue_1)\n                input@1_36)\n         #x0000000000000000000000000000000000000000000000000000000000000000)))\n(assert (bvsgt AttackerWallet AttackerWalletStarting))\n(assert (= LastReturnType 2))\n(assert (= AttackerWallet\n   (bvadd (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)\n          input@1_36)))\n(assert (= FirstTimestamp Timestamp_0))\n(assert (= LastTimestamp Timestamp_1))\n(assert (= |61747461636b6572000000000000000000000000_Wallet|\n   (bvadd (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)\n          input@1_36)))\n(assert (let ((a!1 (bvsub (bvadd (bvsub (bvadd CallValue_0\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       CallValue_0\n                                       #x0000000000000000000000000000000000000000000000004563918244f40000\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       #x0000000000000000000000000000000000000000000000000000000000000000)\n                                #x0000000000000000000000000000000000000000000000004563918244f40000)\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000004563918244f40000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000002faf080\n                         CallValue_0\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000004563918244f40000\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000000000000000000000)\n                  #x0000000000000000000000000000000000000000000000004563918244f40000)))\n  (= |636f6e7472616374000000000000000000000000_Wallet|\n     (bvsub (bvadd a!1\n                   CallValue_0\n                   #x0000000000000000000000000000000000000000000000000000000000000000\n                   #x0000000000000000000000000000000000000000000000004563918244f40000\n                   #x0000000000000000000000000000000000000000000000000000000000000000\n                   CallValue_0\n                   #x0000000000000000000000000000000000000000000000000000000000000000\n                   #x0000000000000000000000000000000000000000000000004563918244f40000\n                   CallValue_1)\n            input@1_36))))\n(assert (bvsge (bvadd (bvsub (bvsub AttackerWalletStarting CallValue_0) CallValue_1)\n              input@1_36)\n       #x0000000000000000000000000000000000000000000000000000000000000000))\n(assert (let ((a!1 (bvsub (bvadd (bvsub (bvadd CallValue_0\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       CallValue_0\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       CallValue_0\n                                       #x0000000000000000000000000000000000000000000000004563918244f40000\n                                       #x0000000000000000000000000000000000000000000000000000000000000000\n                                       #x0000000000000000000000000000000000000000000000000000000000000000)\n                                #x0000000000000000000000000000000000000000000000004563918244f40000)\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000004563918244f40000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000002faf080\n                         CallValue_0\n                         CallValue_0\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000004563918244f40000\n                         #x0000000000000000000000000000000000000000000000000000000000000000\n                         #x0000000000000000000000000000000000000000000000000000000000000000)\n                  #x0000000000000000000000000000000000000000000000004563918244f40000)))\n  (bvsge (bvsub (bvadd a!1\n                       CallValue_0\n                       #x0000000000000000000000000000000000000000000000000000000000000000\n                       #x0000000000000000000000000000000000000000000000004563918244f40000\n                       #x0000000000000000000000000000000000000000000000000000000000000000\n                       CallValue_0\n                       #x0000000000000000000000000000000000000000000000000000000000000000\n                       #x0000000000000000000000000000000000000000000000004563918244f40000\n                       CallValue_1)\n                input@1_36)\n         #x0000000000000000000000000000000000000000000000000000000000000000)))\n(model-add LastReturnType () Int 2)\n(model-add AttackerWallet\n           ()\n           (_ BitVec 256)\n           (bvadd AttackerWalletStarting\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_0)\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_1)\n                  input@1_36))\n(model-add FirstTimestamp () (_ BitVec 256) Timestamp_0)\n(model-add LastTimestamp () (_ BitVec 256) Timestamp_1)\n(model-add |61747461636b6572000000000000000000000000_Wallet|\n           ()\n           (_ BitVec 256)\n           (bvadd AttackerWalletStarting\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_0)\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         CallValue_1)\n                  input@1_36))\n(model-add |636f6e7472616374000000000000000000000000_Wallet|\n           ()\n           (_ BitVec 256)\n           (bvadd #x000000000000000000000000000000000000000000000000d02ab486d1d6f080\n                  (bvmul #x000000000000000000000000000000000000000000000000000000000000001e\n                         CallValue_0)\n                  CallValue_1\n                  (bvmul #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                         input@1_36)))\n(model-del k!5409)\n(model-add input_0_32\n           ()\n           (_ BitVec 256)\n           (concat k!5409\n                   #x00000000000000000000000000000000000000000000000000000000))\n(model-del k!5410)\n(model-add Timestamp_1\n           ()\n           (_ BitVec 256)\n           (ite (or k!5410\n                    (= Timestamp_0\n                       #x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))\n                Timestamp_0\n                (bvadd Timestamp_0\n                       #x0000000000000000000000000000000000000000000000000000000000000001)))\n(model-del k!5411)\n(model-add input_1_64\n           ()\n           (_ BitVec 256)\n           (concat k!5411\n                   #x00000000000000000000000000000000000000000000000000000000))\n(model-del k!5412)\n(model-add k!5409\n           ()\n           (_ BitVec 32)\n           (ite k!5412\n                ((_ extract 31 0) input@0_4)\n                (bvnot ((_ extract 31 0) input@0_4))))\n(model-del k!5413)\n(model-add k!5410 () Bool (not k!5413))\n(model-del k!5414)\n(model-add k!5411\n           ()\n           (_ BitVec 32)\n           (ite k!5414\n                ((_ extract 31 0) input@1_36)\n                (bvnot ((_ extract 31 0) input@1_36))))\n(model-del k!5415)\n(model-add Timestamp_0\n           ()\n           (_ BitVec 256)\n           (ite k!5415\n                #x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                (bvnot #x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)))\n(model-del k!5416)\n(model-add k!5415 () Bool (not k!5416))\n", "stats": {"eliminated vars": 6, "eliminated applications": 8, "decisions": 1018, "propagations": 8096, "binary propagations": 1301, "final checks": 1, "added eqs": 33, "mk clause": 33259, "del clause": 19388, "num checks": 1, "mk bool var": 12801, "bv bit2core": 1600, "bv->core eq": 9, "bv dynamic eqs": 9, "rlimit count": 53544938, "max memory": 22.64, "memory": 5.42, "num allocs": 10282770006.0}}